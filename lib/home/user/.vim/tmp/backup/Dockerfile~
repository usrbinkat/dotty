################################################################################
# ContainerOne | Point of Origin for Deploy & Development 

FROM centos:latest
MAINTAINER ContainerCraft.io
LABEL Vendor="containercraft.io" \
      Version=CCIO-a00.01        \
      License=GPLv3 

################################################################################
# Copy in static assets
COPY src/lib/version    /root/version

COPY src/lib/connect    /bin/connect
COPY src/lib/entrypoint /bin/entrypoint

COPY src/lib/bashrc     /root/.bashrc
COPY src/lib/bash_profile /root/.bash_profile

COPY src/lib/google /root/.bashrc.d/google

################################################################################
# Version Controls 

# OCP Version set in src/ocp
ARG versOCP="4.3.8"
ENV versOCP="${versOCP}"

# Other Versions
ARG versJQ="1.6"
ARG versTF="0.12.24"
ARG versHELM="3.2.1"

ARG urlTF="https://releases.hashicorp.com/terraform/${versTF}/terraform_${versTF}_linux_amd64.zip"
ARG urlJQ="https://github.com/stedolan/jq/releases/download/jq-${versJQ}/jq-linux64"
ARG urlOC="https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/${versOCP}/openshift-client-linux.tar.gz"
ARG urlOCINST="https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/${versOCP}/openshift-install-linux.tar.gz"
ARG urlGCLOUD="https://sdk.cloud.google.com"
ARG urlHELM="https://get.helm.sh/helm-v${versHELM}-linux-amd64.tar.gz"
ARG yumList="\
             git \
             vim \
             sudo \
             tree \
             tmux \
             rsync \
             bsdtar \
             podman \
             openssl \
             buildah \
             ncurses \
             nmap-ncat \
             python3-pip \
             fuse-overlayfs  \
             openssh-server  \
             openssh-clients \
             bash-completion \
            "

################################################################################
# Run build
RUN set -ex \
     && useradd build                                                          \
     && yum -y --setopt=tsflags=nodocs update                                  \
     && yum -y --setopt=tsflags=nodocs install ${yumList}                      \
     && yum -y reinstall shadow-utils                                          \
     && yum -y reinstall shadow-utils                                          \
     && curl -L ${urlHELM}                                                     \
          | tar xzvf - --directory /usr/bin/ linux-amd64/helm                  \
     && curl -L ${urlGCLOUD}                                                   \
          --output /tmp/install-gcloud.sh                                      \
     && . /tmp/install-gcloud.sh --disable-prompts --install-dir=/root/        \
     && curl -L ${urlOCINST}                                                   \
          | tar xzvf - --directory /usr/bin/ openshift-install                 \
     && curl -L ${urlOC}                                                       \
          | tar xzvf - --directory /usr/bin/ kubectl oc                        \
     && curl -L ${urlTF}                                                       \
          | bsdtar -xvf- -C /usr/bin/                                          \
     && curl -L ${urlJQ} -o /usr/bin/jq                                        \
     && pip3 install --upgrade ansible                                         \
     && pip3 install --upgrade awscli                                          \
     && pip3 install --upgrade boto3                                           \
     && chmod +x /usr/bin/jq                                                   \
     && chmod +x /usr/bin/oc                                                   \
     && chmod +x /usr/bin/connect                                              \
     && chmod +x /usr/bin/kubectl                                              \
     && chmod +x /usr/bin/terraform                                            \
     && chmod +x /usr/bin/openshift-install                                    \
     && rm -rf                                                                 \
            /run/nologin                                                       \
     && mkdir -p                                                               \
            /root/bak                                                          \
            /root/.aws                                                         \
            /root/.ssh                                                         \
            /root/.kube                                                        \
            /root/.ccio                                                        \
            /root/.docker                                                      \
            /root/.bashrc.d                                                    \
            /root/.ccio/profile.d                                              \
            /var/lib/shared/overlay-images                                     \
            /var/lib/shared/overlay-layers                                     \
            /root/.ccio/secrets/google/                                        \
     && touch /var/lib/shared/overlay-images/images.lock                       \
     && touch /var/lib/shared/overlay-layers/layers.lock                       \
     && sed -i                                                                 \
              -e 's|^#mount_program|mount_program|g'                           \
              -e '/additionalimage.*/a "/var/lib/shared",'                     \
              -e 's|^mountopt[[:space:]]*=.*$|mountopt = "nodev,fsync=0"|g'    \
            /etc/containers/storage.conf                                       \
     && yum clean all                                                          \
     && rm -rf /var/cache /var/log/dnf* /var/log/yum.*                         \
     && echo

################################################################################
# Set static environment variables
ENV \
    versOCP="${versOCP}" \
    BUILDAH_ISOLATION=chroot

################################################################################
ENTRYPOINT ["/bin/entrypoint"]
WORKDIR /root/.ccio
